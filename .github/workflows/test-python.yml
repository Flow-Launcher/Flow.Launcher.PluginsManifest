name: Test run Python plugins
on:
  pull_request:
  workflow_dispatch:
    inputs:
      pyversion:
        description: "Python version for the test"
        default: 3.11
        type: choice
        options:
          - 3.11
          - 3.8
      run_type:
        description: "Run test for all or just the latest untested plugin"
        default: "all"
        type: choice
        options:
          - "all"
          - ""

jobs:
  skip_check_job:
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.filter.outputs.plugins }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          plugins:
            - "plugins/*.json"
  test-run-plugin:
    needs: skip_check_job
    if: ${{ needs.skip_check_job.outputs.plugins == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - if: ${{ github.event_name == 'pull_request'}}
        name: "Set up Python 3.11 for pull request test"
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - if: ${{ github.event_name == 'workflow_dispatch'}}
        name: "Set up Python ${{ github.event.inputs.pyversion }} for manual test"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.pyversion }}
      - uses: actions/cache@v4
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./ci/envs/requirements-test-python.txt
      - name: Download & test plugin
        id: download
        run: |
          python ./ci/src/test-python.py ${{ github.event.inputs.run_type }}
